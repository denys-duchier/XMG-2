#! /usr/bin/python3
# -*- mode:python; coding:utf-8 -*-
# this script is for invocation from within the source tree

import sys

if sys.version_info[0] < 3:
    raise Exception("xmg requires python version 3")

import os.path
appdir = os.path.dirname(os.path.realpath(sys.argv[0]))

INITEXT = """[DEFAULT]
xmg_srcdir = %(appdir)s
xmg_install = %%(XMG_SRCDIR)s/.install
xmg_python_rootdir = %%(XMG_INSTALL)s/python
xmg_yap_rootdir = %%(XMG_INSTALL)s/yap
xmg_data_rootdir = %%(XMG_INSTALL)s/share

[COMMANDS]
commands = 
"""

import configparser
CONFIG = configparser.ConfigParser()
INIFILE = os.path.join(appdir, "xmg.ini")

if not os.path.exists(INIFILE):
   with open(INIFILE, "wt") as f:
       f.write(INITEXT % {"appdir": appdir})

CONFIG.read(INIFILE)
def save_config():
    with open(INIFILE, "wt") as f:
        CONFIG.write(f)
CONFIG.save = save_config

if len(sys.argv) >= 2 and sys.argv[1]=="bootstrap":
    CONFIG['COMMANDS']['commands'] = ""
    CONFIG.save()
    # current bootstrapping. need to do better later
    sys.path.insert(0, os.path.join(appdir, "core/python"))
else:
    sys.path.insert(0, CONFIG['DEFAULT']['XMG_PYTHON_ROOTDIR'])

import xmg
xmg.config = CONFIG

import xmg.command
# this should use xmg.config
xmg.command.YAPDIR = os.path.abspath(os.path.join(os.path.dirname(sys.argv[0]),"."))

xmg.command.main()
